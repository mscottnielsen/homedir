##############################################################################
# DTE config

# to run DTE jobs on the farm,
#  see: http://content.oracle.com/site/pd/fmw/Dev/dte/client/index.html

#export AUTO_HOME=/usr/local/packages/aime/dte/DTE # old: /usr/local/packages/aime/dte/DTE3
#export AUTO_WORK=/scratch/$LOGNAME/work
#export JDK15HOME=/usr/local/packages/jdk15
#export PERL5HOME=/usr/local/packages/perl-5.8.4

_app_dte_env() {
  export AUTO_HOME=/usr/local/packages/aime/dte/DTE # old: /usr/local/packages/aime/dte/DTE3
  export AUTO_WORK=/scratch/$LOGNAME/work
  export JDK15HOME=/usr/local/packages/jdk15
  export PERL5HOME=/usr/local/packages/perl-5.8.4

  printf "export AUTO_HOME=$AUTO_HOME\n"
  printf "export AUTO_WORK=$AUTO_WORK\n"
  printf "export JDK15HOME=$JDK15HOME\n"
  printf "export PERL5HOME=$PERL5HOME\n"

  local work_p=${AUTO_WORK%/*}
  local work_pp=${work_p%/*}

  # try to create temp scratch dir, but ignore error if can't
  [ -d $work_pp -a ! -d $AUTO_WORK ] \
     && mkdir -p $AUTO_WORK 2>/dev/null 1>&2 \
     && printf "** (for DTE) created directory $AUTO_WORK\n" 1>&2 \
     || printf "** (DTE) no work directory: $AUTO_WORK\n" > /dev/null

  return 0
}

workdir() {
  local h=$(hostname)
  local net_dir=/net/$h/scratch/$USER
  local local_dir_base=$HOME
  local local_dir_name=work-$h
  local local_dir=$local_dir_base/$local_dir_name

  usage() { cat<<EOF_USAGE
  Usage: workdir [-m]
    cd into local "working" directory, a symlink to a longer (mounted) path
    The local working directory (link):  $local_dir
    Pointing to work directory (mount):  $net_dir
    Options:
      -m  make the symbolic link, in: $local_dir_base
      -M  replace the symbolic link, if it exists
EOF_USAGE
  }

  if [ $# -gt 0 -a "$1" = "-m" -o "$1" = "-M" ] ; then
    [ "$1" = "-M" ] && [ -h "$local_dir" ] && rm $local_dir
    [ ! -d $net_dir ] && mkdir -p "$net_dir"
    [ ! -e $local_dir ] && (cd $local_dir_base && ln -s $net_dir $local_dir_name)
    [ -e $net_dir -a -e $local_dir ] || { printf "** error: unable to create link: $local_dir -> $net_dir\n"; return 2; }
    return 0
  elif [ $# -gt 0 -a "${1:0:1}" = "-" ] ; then
    usage; return 2
  fi
  [ -e $local_dir ] && cd $local_dir || { printf "** error: directory $local_dir does not exist\n\n"; usage; }
  return 2
}

if [ "$h_os" != "cygwin" ] ; then
  eval $( _app_dte_env )
fi

# return true
:

