###############################################################################
# env var's and defaults:
#   $HOMEDIR_ENV (~/env)  -- generic env config
#   $HOMEDIR_BIN (~/bin)  -- shared scripts, bash completion
#   $HOMEDIR_USER_ENV (~/user_env) -- per-user env settings
#   $HOMEDIR_HOST_ENV (~/host_env) -- per-host env settings

# local.env (unversioned file) is in $HOME (historically, was in $HOMEDIR_ENV)
[ -e $HOME/local.env ] && LOCAL_ENV=$HOME/local.env || LOCAL_ENV=$HOMEDIR_ENV/local.env

h_log "  " "HOMEDIR=$HOMEDIR HOMEDIR_ENV=$HOMEDIR_ENV HOMEDIR_BIN=$HOMEDIR_BIN LOCAL_ENV=$LOCAL_ENV HOMEDIR_USER_ENV=$HOMEDIR_USER_ENV HOMEDIR_HOST_ENV=$HOMEDIR_HOST_ENV\n"

###############################################################################
# Set env per-user/host/OS (only local.env is unversioned).
# Init order:
#  local.env-> .aliases-> user-*.env-> org-*.env-> host-*.env-> os-*.env
# Notes:
#  * later env files can override earlier settings, but ONLY if necessary:
#    - allow earlier settings to be in effect => : ${foo:="some_value"})
#    - to just override => foo="new_value"
#  * generic, cross-platform aliases/functions can go in ~/.aliases (for all users)
#  * user-$LOGNAME.env, host-$HOSTNAME.env are  per-user, post-host settings.
#  * if host-{fqdn}.env exists, it is sourced before host-{name}.env
#  * set USER_ORG in local.env or user-*.env to use org-${USER_ORG}.env
#     - can set multiple orgs using=> USER_ORG=one,two,three
#     - loads in turn: org-one.env, org-two.env, org-three.env
#  * generic OS-wide settings (Linux/Solaris/etc) are in os-*.env
#  * if errors at login, check $HOMEDIR_LOG (~/.h_log) or ~/.xsession-errors

_load_h_env_file() {
  local envf=$1 ts_lap=$(h_tstamp)
  if [ -f "$envf" ]; then
    printf "   loading \"$envf\"" >> $HOMEDIR_LOG
    . $envf || printf "   (**error ($?): \"$envf\")" >> $HOMEDIR_LOG
    printf " ($(( $(h_tstamp) - ts_lap ))sec)\n" >> $HOMEDIR_LOG
  elif [ ${#VERBOSE} -gt 0 ]; then
    printf "   **warning: \"$envf\" does not exist. ($(( $(h_tstamp) - ts_lap ))sec)\n" >> $HOMEDIR_LOG
  fi
}

_load_h_env_file $LOCAL_ENV
_load_h_env_file $HOMEDIR/.aliases
_load_h_env_file $HOMEDIR_USER_ENV/user-${LOGNAME:-"$USER"}.env
for f in $(eval echo $HOMEDIR_USER_ENV/org-{"${USER_ORG:-"default"}"}.env) ; do
  _load_h_env_file $f
done
_load_h_env_file $HOMEDIR_HOST_ENV/host-${h_host}.${h_domain:-"local"}.env
_load_h_env_file $HOMEDIR_HOST_ENV/host-${h_host}.env
_load_h_env_file $HOMEDIR_ENV/os-${h_os}.env

h_log "user,host,os env loaded\n"

