###############################################################################
# Per user, host, OS configuration
###############################################################################

h_log "  " "HOMEDIR=$HOMEDIR HOMEDIR_ENV=$HOMEDIR_ENV HOMEDIR_BIN=$HOMEDIR_BIN HOMEDIR_USER_ENV=$HOMEDIR_USER_ENV HOMEDIR_HOST_ENV=$HOMEDIR_HOST_ENV\n"

[ ${HOMEDIR_BIN_COMMON_LOG_INIT:-0} -eq 0 ] && source $HOMEDIR_BIN/common/log.sh >> $HOMEDIR_LOG 2>&1

###############################################################################
# To add to list of user-org's: USER_ORG=${USER_ORG},oradev,foobar
# Can source multiple user org env's. the awk loop removes duplicates in list, w/o sorting.
# The eval =converts=> USER_ORG=one,two => org-{one,two}.env => org-one.env org-two.env

setup_env_log DEBUG "user_env: (orig) USER_ORG=$USER_ORG"

export USER_ORG
setup_env_log DEBUG "user_env: LOGNAME=$LOGNAME (USER=$USER) USER_ORG(init)=$USER_ORG"

h_log "  " "loading user-env"

setup_user() {
   for user_env ; do
    if [ -f $user_env ] ; then
      printf ", ${user_env##*/}"                      >> $HOMEDIR_LOG 2>&1
      setup_env_log DEBUG "user_env: $user_env"       >> $HOMEDIR_LOG 2>&1
      source $HOMEDIR_ENV/source_env.sh -q $user_env  >> $HOMEDIR_LOG 2>&1
    else
      echo "file doesn't exist: $user_env" > /dev/null # debugging
    fi
  done
}

h_log "  " "loading user-env"
for user_env in \
      $HOMEDIR/.aliases \
      $HOMEDIR_USER_ENV/user-${LOGNAME:-"$USER"}.env
do
  setup_user $user_env
done

USER_ORG_TRIM=$(printf "${USER_ORG:-"default"}\n" |$AWK 'BEGIN { RS=","; ORS=","; } !seen[$0]++ ' |head -1)
setup_env_log DEBUG "user_env: USER_ORG_TRIM=$USER_ORG_TRIM"

USER_ORG_FILES=$(for f in $(echo ${USER_ORG_TRIM//,/ }) ; do echo "$HOMEDIR_USER_ENV/org-${f}.env"; done)
setup_env_log DEBUG "user_env: USER_ORG_FILES=$USER_ORG_FILES"

for user_env in \
      $USER_ORG_FILES \
      $HOMEDIR_HOST_ENV/host-${h_host}.${h_domain:-"local"}.env \
      $HOMEDIR_HOST_ENV/host-${h_host}.env \
      $HOMEDIR_ENV/os-${h_os}.env
do
  setup_user $user_env
done
h_log " done." "\n"

# return status
:
