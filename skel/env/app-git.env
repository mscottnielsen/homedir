##############################################################################
# Init git env w/ special prompt and env vars.
# Set USE_PROMPT_WITH_GIT to some other value to disable using __git_ps1
#
# **NOTE: The fancy git prompt REQUIRES that bash_completion be installed.
#
# Setting the following shows additional state next to the branch name
#   GIT_PS1_SHOWDIRTYSTATE=1      # show unstaged (*) and staged (+) changes
#   GIT_PS1_SHOWSTASHSTATE=1      # if something currently stashed, show '$'
#   GIT_PS1_SHOWUNTRACKEDFILES=1  # if untracked files, show '%'
#   GIT_PS1_SHOWUPSTREAM="auto"   # if HEAD and its upstream differ,
#          show "<" if behind, ">" if ahead, and "<>" if diverged; set
#          to a space-separated list of values:
#            * verbose - show number of commits ahead/behind (+/-) upstream
#            * legacy  - don't use '--count' option (in recent git-rev-list)
#            * git     - always compare HEAD to @{upstream}
#            * svn     - always compare HEAD to your SVN upstream
#

export BASH_COMPLETION_GIT
export USE_PROMPT_WITH_GIT
export H_APP_GIT_ENV

_app_git_env() {
  if [ -f /etc/bash_completion.d/git-prompt ] ; then
    BASH_COMPLETION_GIT=${BASH_COMPLETION_GIT:="/etc/bash_completion.d/git-prompt"}
  elif [ -f /etc/bash_completion.d/git ] ; then
    BASH_COMPLETION_GIT=${BASH_COMPLETION_GIT:="/etc/bash_completion.d/git"}
  fi

  if test -f $BASH_COMPLETION_GIT
  then
    if echo "$0" | grep -i bash >/dev/null 2>&1
    then
       GIT_PS1_SHOWDIRTYSTATE=1 ;
       GIT_PS1_SHOWSTASHSTATE=1 ;
       GIT_PS1_SHOWUNTRACKEDFILES=1 ;
       GIT_PS1_SHOWUPSTREAM="auto" ;
       . $BASH_COMPLETION_GIT >/dev/null 2>&1
    fi

    # use __git_ps1 to set PS1 (slow first run: run once in bg?)
    type __git_ps1 > /dev/null 2>&1 \
       && [ ${#USE_PROMPT_WITH_GIT} -eq 0 ] \
       && USE_PROMPT_WITH_GIT='$( __git_ps1 " (%s)")'
    #( __git_ps1 >/dev/null 2>&1 & ) > /dev/null 2>&1 ;
  fi
}


if [ ${H_APP_GIT_ENV:-0} -ne 1 ]; then
  _app_git_env
  H_APP_GIT_ENV=1
fi

:
