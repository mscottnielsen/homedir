##############################################################################
# Init git environment prompt and env vars. Set PS1_GIT to some other value
# to disable using __git_ps1
#
# **NOTE: git prompt REQUIRES bash_completion installed, and bash >= 4.1
#
# Set the following to show additional state next to the branch name
#   GIT_PS1_SHOWDIRTYSTATE=1      # show unstaged (*) and staged (+) changes
#   GIT_PS1_SHOWSTASHSTATE=1      # if something currently stashed, show '$'
#   GIT_PS1_SHOWUNTRACKEDFILES=1  # if untracked files, show '%'
#   GIT_PS1_SHOWUPSTREAM="auto"   # if HEAD and its upstream differ,
#          show "<" if behind, ">" if ahead, and "<>" if diverged;
#          set to a space-separated list of values:
#            * verbose - show number of commits ahead/behind (+/-) upstream
#            * legacy  - don't use '--count' option (in recent git-rev-list)
#            * git     - always compare HEAD to @{upstream}
#            * svn     - always compare HEAD to your SVN upstream

#set -x
export BASH_COMPLETION_GIT
export PS1_GIT
#export H_APP_GIT_ENV  # don't export env-loaded flags

[ ${HOMEDIR_BIN_COMMON_LOG_INIT:-0} -eq 0 ] && . $HOMEDIR_BIN/common/log.sh

_app_git_env() {
  debug_log() {
    #local LOG_LEVEL=DEBUG
    log "$@"
  }

  # type __git_ps1 >/dev/null 2>&1  || echo not_configured
  if [ -f /etc/bash_completion.d/git-prompt ] ; then
    : ${BASH_COMPLETION_GIT:="/etc/bash_completion.d/git-prompt"}
  elif [ -f /usr/share/git-core/contrib/completion/git-prompt.sh ] ; then
    : ${BASH_COMPLETION_GIT:="/usr/share/git-core/contrib/completion/git-prompt.sh"}
  elif [ -f /etc/bash_completion.d/git ] ; then
    : ${BASH_COMPLETION_GIT:="/etc/bash_completion.d/git"}
  fi

  if test -f "$BASH_COMPLETION_GIT" ; then
    if echo "$0" | grep -i bash >/dev/null 2>&1 ; then
       GIT_PS1_SHOWDIRTYSTATE=1
       GIT_PS1_SHOWSTASHSTATE=1
       GIT_PS1_SHOWUNTRACKEDFILES=1
       GIT_PS1_SHOWUPSTREAM="auto"
       debug_log DEBUG "loading bash completion: $BASH_COMPLETION_GIT"
       . $BASH_COMPLETION_GIT >/dev/null 2>&1
    fi
  else
    debug_log WARN "no bash completion found: $BASH_COMPLETION_GIT"
  fi
}

if [ ${H_APP_GIT_ENV:=0} -eq 0 ]; then
  _app_git_env
  type __git_ps1 > /dev/null 2>&1 || __git_ps1() { :; }  # no-op impl if no git-prompt (eg chroot env)
  export -f __git_ps1
  [ "${PS1_GIT}" = "" ] && PS1_GIT='$( __git_ps1 " (%s)")'
  (( H_APP_GIT_ENV = H_APP_GIT_ENV + 1 ))
fi

#set +x
:

