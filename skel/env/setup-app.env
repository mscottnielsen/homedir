###############################################################################
# summarize log file (check size every ~100 logins)
if [ "$sh_type" = "bash" -a -f $HOMEDIR_LOG ]; then
  if (( RANDOM % 100 == 0 )) && (( $(du -k $HOMEDIR_LOG | cut -f1) > 2048 )); then
    h_log "truncating log: $(ls -l $HOMEDIR_LOG)\n"
    egrep 'loaded.*sec' $HOMEDIR_LOG | tail -15000 > ${HOMEDIR_LOG}.$$.tmp
    cat ${HOMEDIR_LOG}.$$.tmp > $HOMEDIR_LOG  # retain chmod/links
    rm -f ${HOMEDIR_LOG}.$$.tmp
  fi
fi


###############################################################################
# Set env for various apps (git, java, prompt, completion, etc). List of apps
# to init is set in APP_ENV_LIST, defined in user/org/host/os env files.
# e.g., APP_ENV_LIST=( java git info-prompt linux-utils )
# sourcing, in order, ~/env/app-java.env, ~/env/app-git.env, (etc)

h_log "  " "loading app-env (${APP_ENV_LIST[*]}): "

for app_env in ${APP_ENV_LIST[*]}
do
  ts_lap=$(h_tstamp)
  var=$(echo "$app_env"|sed 's/[()]//g') # bash-3.00 bug (parens in elem)
  var=${var#app-}                        # APP_ENV_LIST "app-" prefix optional
  file="$HOMEDIR_ENV/app-${var}.env"
  printf "${var}" >> $HOMEDIR_LOG
  if [ -f "$file" ]; then
    . $file || printf "(**error ($?): \"$file\"),  " >> $HOMEDIR_LOG
  elif [ ${#VERBOSE} -gt 0 ]; then
    printf "(**warn: not found: \"$file\"), " >> $HOMEDIR_LOG
  fi
  printf "($(( $(h_tstamp) - ts_lap ))s), " >> $HOMEDIR_LOG
done

h_log " done." "\n"
h_log "app-env loaded\n"

